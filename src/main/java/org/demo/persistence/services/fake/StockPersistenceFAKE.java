/*
 * Created on 3 nov. 2017 ( Time 10:20:59 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.persistence.services.fake;

import java.util.List;
import java.util.Map;

import org.demo.bean.jpa.StockEntity;
import org.demo.persistence.commons.fake.GenericFakeService;
import org.demo.persistence.services.StockPersistence;

/**
 * Fake persistence service implementation ( entity "Stock" )
 *
 * @author Telosys Tools Generator
 */
public class StockPersistenceFAKE extends GenericFakeService<StockEntity> implements StockPersistence {

	public StockPersistenceFAKE () {
		super(StockEntity.class);
	}
	
	protected StockEntity buildEntity(int index) {
		StockEntity entity = new StockEntity();
		// Init fields with mock values
		entity.setQte( nextInteger() ) ;
		return entity ;
	}
	
	
	public boolean delete(StockEntity entity) {
		log("delete ( StockEntity : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( Integer articleref ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(StockEntity entity) {
		log("insert ( StockEntity : " + entity + ")" ) ;
	}

	public StockEntity load( Integer articleref ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<StockEntity> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<StockEntity> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<StockEntity> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public StockEntity save(StockEntity entity) {
		log("insert ( StockEntity : " + entity + ")" ) ;
		return entity;
	}

	public List<StockEntity> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

	@Override
	public long countAll() {
		return 0 ;
	}

}
